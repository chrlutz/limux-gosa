#!/bin/bash

# This code is part of GOsa (http://www.gosa-project.org)
#
# Copyright (C) 2014 Landeshauptstadt MÃ¼nchen
# Author: Matthias S. Benkmann
#
# This program is free software;
# you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation;
# either version 2 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#


# This script implements an interactive process for slimming down a FAI
# NFSroot by deleting unused files. Just call this script on your NFS server
# and follow the instructions.


if [ $# != 2 ]; then
  echo "USAGE: $0 <fat-dir> <slim-dir>"
  exit 0
fi

error()
{
  echo 1>&2 "$@"
  exit 1
}

fat="$(readlink -f "$1")"
slim="$(readlink -f "$2")"

test -d "$slim" && error "$slim already exists"
test -d "$fat" || error "$fat does not exist"

test $EUID = 0 || error "You must be root to run this script."

echo "This script works by monitoring NFS accesses during installation."
echo "First this script will activate NFS logging (rpcdebug -m nfsd -s fh)"
echo "and will tag the current position in syslog with ==~~--==~~--."
echo "Then you will be asked to perform the installation(s) you want"
echo "the slimmed down nfsroot to support. When they have finished,"
echo "the script will determine the files that have been accessed within"
echo "$fat and will create a slimmed down copy of $fat in"
echo "$slim by first copying everything and then deleting ordinary files"
echo "that have not been accessed. Special files and directories will"
echo "always be kept, as will /lib/firmware and /lib/modules to"
echo "make sure that installations on different hardware will also work."
echo "Because /lib/firmware and /lib/modules are very large, you should"
echo "consider manually slimming them down by removing drivers and firmware"
echo "for hardware you are sure will be unneeded during installation."
echo
echo "Press ENTER to continue or Ctrl-C to abort"
read

temp="/tmp/slim-$$-$RANDOM"
while ! mkdir -m 0700 "$temp" ; do
  temp="/tmp/slim-$$-$RANDOM"
done

trap "rm -rf $temp" EXIT

echo
echo "rpcdebug -m nfsd -s fh"
rpcdebug -m nfsd -s fh || exit 1

logger '==~~--==~~-==~~--==~~-==~~--==~~-'

echo "Please start the installation(s) now..."
sleep 3
echo "When the installation(s) is/are done, press ENTER"
read

echo "rpcdebug -m nfsd -c fh"
rpcdebug -m nfsd -c fh

echo
echo "Generating list of unused files..."

tac /var/log/syslog | sed '/==~~--==~~-==~~--==~~-==~~--==~~-/,$d' |
sed -n 's/^.*ino=\([1-9][0-9]*\)).*/\1/p' | sort -u >$temp/used-inodes.txt

cd "$fat" || exit 1

find . -type f -printf "%i %p\n" | grep -vFf $temp/used-inodes.txt | sed 's/^[0-9]* //' >$temp/unused-files.txt

# Remove /lib/firmware and /lib/modules from unused files
sed -i '/^\.\/lib\/firmware\//d;/^\.\/lib\/modules\//d;' $temp/unused-files.txt

echo "Copying $fat => $slim ..."

test -d "$slim" && error "$slim already exists"
cp -a "$fat" "$slim" || exit 1

echo "Deleting unused files from $slim ..."
cd "$slim" || exit 1
xargs -a $temp/unused-files.txt rm
