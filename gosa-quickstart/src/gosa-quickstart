#!/bin/bash

set -e

# MUST BEGIN WITH o=gosa, because the ldif won't work otherwise.
# This is because the respective node has objectClass organization 
# and an attribute "o: gosa". This is not a requirement of GOsa itself,
# just of the gosa-quickstart scripts.
suffix="o=gosa"
department1="department1"
password="admin"
susipassword="susi"
language="de_DE"
ldapserver="localhost"
hostname="$(hostname -f)"
macaddress="$(ip -o link show| sed -n 's/^.*state UP.*link\/ether \([^ ]*\).*/\1/p' | tail -n 1)"

temp=/tmp/gosa-quickstart
while ! mkdir -m 0700 $temp; do
  temp=/tmp/gosa-quickstart.$$.$RANDOM
done
trap "rm -rf $temp" EXIT

echo -n "$password" >$temp/ldap-password
chmod 0600 $temp/ldap-password


echo "=== Preseeding... ==="
echo "slapd   slapd/password1 password $password" | debconf-set-selections
echo "slapd   slapd/password2 password $password" | debconf-set-selections
export DEBIAN_FRONTEND=noninteractive

echo "=== Installing LDAP packages... ==="
apt-get -q -y install slapd ldap-utils gosa-schema gosa-plugin-fai-schema

umask 022

echo "=== Adding GOsa schemata to LDAP config... ==="
cd /etc/ldap/schema/gosa
./convert_schema.sh *.schema
./install_all_ldif.sh

echo "=== Preparing /srv/ldap/gosa... ==="
mkdir -p /srv/ldap/gosa
chown openldap: /srv/ldap/gosa
echo -n >>/etc/apparmor.d/local/usr.sbin.slapd '
/srv/ldap/gosa/ rwk,
/srv/ldap/gosa/** rwk,
'

service apparmor restart


echo "=== Populating LDAP with FAI/GOsa objects... ==="

cd /usr/share/gosa-quickstart/ldif

password_hash="$(slappasswd -u -s "$password"|base64)"
for ldif in *.ldif ; do
  echo "=== Installing $ldif... ==="
  sed -e "
s/\\\${password_hash}/$password_hash/g
s/\\\${suffix}/$suffix/g
s/\\\${department1}/$department1/g
" "$ldif" | ldapadd -Y EXTERNAL -H ldapi:///
done

echo "=== Patching ldap.conf ==="
cp /etc/ldap/ldap.conf /etc/ldap/ldap.conf.bak &&
  sed "s/^[ #]*BASE.*/BASE   $suffix/;s/^[ #]*URI/URI    ldap:\/\/$ldapserver/" /etc/ldap/ldap.conf.bak >/etc/ldap/ldap.conf


echo "=== Creating LDAP object for this LDAP server ($hostname/$macaddress) ==="

ldapserver=$hostname
echo "dn: cn=$hostname,ou=servers,ou=systems,ou=$department1,$suffix
cn: $hostname
gotoMode: active
macAddress: $macaddress
gotoBootKernel: default
goLdapBase: ldap://$ldapserver:389/$suffix
gotoLdapServer: 1:$ldapserver:ldap://$ldapserver:389/$suffix
objectClass: GOhard
objectClass: goServer
objectClass: goLdapServer
objectClass: gotoWorkstationTemplate
objectClass: FAIobject
"| ldapadd -Y EXTERNAL -H ldapi:///

echo "=== Making sure desired locale is available ==="
locale-gen "$language.utf8"

echo "=== Installing GOsa² and plugins ==="
apt-get -q -y install gosa gosa-plugin-systems gosa-plugin-fai

echo "=== Activating /gosa site in Apache configurations ==="
ln -snf /etc/gosa/gosa-apache.conf /etc/apache2/conf-available/
ln -snf ../conf-available/gosa-apache.conf /etc/apache2/conf-enabled/

echo "=== Enabling modules required by GOsa² ==="
php5enmod mcrypt

/etc/init.d/apache2 restart

echo "=== Configuring GOsa² ==="
cd /usr/share/gosa-quickstart/conf
cp resolutions /etc/gosa
cp menus /etc/gosa
sed -e "
s/\\\${susipassword}/$susipassword/g
s/\\\${password}/$password/g
s/\\\${suffix}/$suffix/g
s/\\\${ldapserver}/$ldapserver/g
s/\\\${department1}/$department1/g
s/\\\${language}/$language/g
" gosa.conf >/etc/gosa/gosa.conf

chgrp www-data /etc/gosa/gosa.conf
chmod u=rw,g=r,o= /etc/gosa/gosa.conf

mkdir -p /var/cache/gosa/compiled-tpl/
chgrp -R www-data /var/cache/gosa
chmod -R g+rwX /var/cache/gosa/

if dpkg --compare-versions "$(apt-cache policy pxelinux | sed -n 's/^.*Candidate: \(.*\)/\1/p')" ge "3:6.03~pre18+dfsg-1" ; then
  echo "=== Installing pxelinux ==="
  apt-get -q -y install pxelinux
else
  echo "=== Installing syslinux-common ==="
  apt-get -q -y install syslinux-common
fi

pxelinux="$(dpkg -S '*/pxelinux.0')"

echo "=== Installing GOsa² support infrastructure ==="
cd /usr/share/gosa-quickstart/conf
mkdir -p /etc/gosa-si
sed -e "
s/\\\${susipassword}/$susipassword/g
s/\\\${password}/$password/g
s/\\\${suffix}/$suffix/g
s/\\\${ldapserver}/$ldapserver/g
s/\\\${department1}/$department1/g
s%\\\${pxelinux}%$pxelinux%g
" server.conf >/etc/gosa-si/server.conf

chown -R root:root /etc/gosa-si
chmod u=rw,g=r,o=  /etc/gosa-si/server.conf

hostname="$(hostname -f)"
macaddress="$(ip -o link show| sed -n 's/^.*state UP.*link\/ether \([^ ]*\).*/\1/p' | tail -n 1)"
test "$hostname" != "$ldapserver" && {
  echo "=== Creating LDAP object for this server ($hostname/$macaddress) ==="

  echo "dn: cn=$hostname,ou=servers,ou=systems,ou=$department1,$suffix
cn: $hostname
gotoMode: active
macAddress: $macaddress
gotoBootKernel: default
gotoLdapServer: 1:$ldapserver:ldap://$ldapserver:389/$suffix
objectClass: GOhard
objectClass: goServer
objectClass: gotoWorkstationTemplate
objectClass: FAIobject
"| ldapadd -x -H "ldap://$ldapserver" -D "uid=admin,$suffix" -y "$temp/ldap-password"
}

# Install gosa-si package after creating the config file, so
# that it starts up the right way immediately. The package does not
# contain a server.conf at this time. Should one ever be added,
# a diversion would be the proper way to deal with it.
apt-get -q -y install gosa-si

echo "=== Installing GOsa² FAI helpers ==="
apt-get -q -y install gosa-fai-helpers
ln -snf /etc/gosa/fai-helpers-apache.conf /etc/apache2/conf-available/
ln -snf ../conf-available/fai-helpers-apache.conf /etc/apache2/conf-enabled/

service apache2 restart
